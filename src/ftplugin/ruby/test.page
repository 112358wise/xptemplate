


    #   -------------"_--------------- 
    #  "`w^"                           



"WRAPPED_TEXT
WRAPPED_TEXT_line2"

"WRAPPED_TEXT
WRAPPED_TEXT_line2" b

`"WRAPPED_TEXT
WRAPPED_TEXT_line2"^

a "WRAPPED_TEXT
WRAPPED_TEXT_line2"


    #   -------------%--------------- 
    #  %`_^[`^]                       



    %w[]

    %w[_TYPED] b

    `%w[]^

    a %w[]


    #   -------------'_--------------- 
    #  '`w^'                           



'WRAPPED_TEXT
WRAPPED_TEXT_line2'

'WRAPPED_TEXT
WRAPPED_TEXT_line2' b

`'WRAPPED_TEXT
WRAPPED_TEXT_line2'^

a 'WRAPPED_TEXT
WRAPPED_TEXT_line2'


    #   -------------(_--------------- 
    #  (`w^)                           



(WRAPPED_TEXT
WRAPPED_TEXT_line2)

(WRAPPED_TEXT
WRAPPED_TEXT_line2) b

`(WRAPPED_TEXT
WRAPPED_TEXT_line2)^

a (WRAPPED_TEXT
WRAPPED_TEXT_line2)


    #   -------------:--------------- 
    #  :`key^ => `value^              



    :key => value

    :key_TYPED => value b

    `:key => value^

    a :key => value


    #   -------------<_--------------- 
    #  <`w^>                           



<WRAPPED_TEXT
WRAPPED_TEXT_line2>

<WRAPPED_TEXT
WRAPPED_TEXT_line2> b

`<WRAPPED_TEXT
WRAPPED_TEXT_line2>^

a <WRAPPED_TEXT
WRAPPED_TEXT_line2>


    #   -------------[_--------------- 
    #  [`w^]                           



[WRAPPED_TEXT
WRAPPED_TEXT_line2]

[WRAPPED_TEXT
WRAPPED_TEXT_line2] b

`[WRAPPED_TEXT
WRAPPED_TEXT_line2]^

a [WRAPPED_TEXT
WRAPPED_TEXT_line2]


    #   -------------_d--------------- 
    #  __DATA__                        



    __DATA__

    __DATA__ b

    `__DATA__^

    a __DATA__


    #   -------------_e--------------- 
    #  __END__                         



    __END__

    __END__ b

    `__END__^

    a __END__


    #   -------------_f--------------- 
    #  __FILE__                        



    __FILE__

    __FILE__ b

    `__FILE__^

    a __FILE__


    #   -------------`_--------------- 
    #  \``w^\`                         



`WRAPPED_TEXT
WRAPPED_TEXT_line2`

`WRAPPED_TEXT
WRAPPED_TEXT_line2` b

``WRAPPED_TEXT
WRAPPED_TEXT_line2`^

a `WRAPPED_TEXT
WRAPPED_TEXT_line2`


    #   -------------ali--------------- 
    #  alias :`new^ :`old^              



    alias :new :old_new

    alias :new_TYPED :old_TYPED b

    `alias :new :old_new^

    a alias :new :old_new


    #   -------------all--------------- 
    #  all? { |`element^| `cursor^ }    



    all? { |element|  }

    all? { |element_TYPED|  } b

    `all? { |element|  }^

    a all? { |element|  }


    #   -------------amm--------------- 
    #  alias_method :`new^, :`old^      



    alias_method :new, :old_new

    alias_method :new_TYPED, :old_TYPED b

    `alias_method :new, :old_new^

    a alias_method :new, :old_new


    #   -------------any--------------- 
    #  any? { |`element^| `cursor^ }    



    any? { |element|  }

    any? { |element_TYPED|  } b

    `any? { |element|  }^

    a any? { |element|  }


    #   -------------app--------------- 
    #  if __FILE__ == $PROGRAM_NAME     
    #      `cursor^                     
    #  end                              



    if __FILE__ == $PROGRAM_NAME
        
    end

    if __FILE__ == $PROGRAM_NAME
        
    end b

    `if __FILE__ == $PROGRAM_NAME
        
    end^

    a if __FILE__ == $PROGRAM_NAME
        
    end


    #   -------------array---------------   
    #  Array.new(`size^) { |`i^| `cursor^ } 



    Array.new(size) { |i|  }

    Array.new(size_TYPED) { |i_TYPED|  } b

    `Array.new(size) { |i|  }^

    a Array.new(size) { |i|  }


    #   -------------ass--------------- 
    #  assert`_`what^                   



    assert_block {  }

    assert_block {  } b

    `assert_block {  }^

    a assert_block {  }


    #   -------------attr--------------- 
    #  attr`_`what^ :`attr*^             



    attr_accessor :

    attr_accessor :attr_TYPED, :attr_TYPED, :attr_TYPED b

    `attr_accessor :^

    a attr_accessor :


    #   -------------Author--------------- 
    #  `$author^                           



    drdr.xp

    drdr.xp b

    `drdr.xp^

    a drdr.xp


    #   -------------BEG--------------- 
    #  BEGIN {                          
    #      `cursor^                     
    #  }                                



    BEGIN {
        
    }

    BEGIN {
        
    } b

        `BEGIN {
            
        }^

        a BEGIN {
            
        }


    #   -------------begin--------------- 
    #  begin                              
    #      `expr^                         
    #  ``rescue...`                       
    #  {{^rescue `Exception^` => `e^      
    #      `block^                        
    #  ``rescue...`                       
    #  ^`}}^``else...`                    
    #  {{^else                            
    #      `block^                        
    #  `}}^``ensure...`                   
    #  {{^ensure                          
    #      `cursor^                       
    #  `}}^end                            



    begin
        expr
    rescue Exception => e
        # block
    rescue Exception => e
        # block
    rescue Exception => e
        # block
    else
        # block
    ensure
        
    end

        begin
            expr_TYPED
        rescue_TYPED
        else_TYPED
        ensure_TYPED
                end b

                `begin
                    expr
                rescue Exception => e
                    # block
                rescue Exception => e
                    # block
                rescue Exception => e
                    # block
                else
                    # block
                ensure
                    
                end^

                a begin
                    expr
                rescue Exception => e
                    # block
                rescue Exception => e
                    # block
                rescue Exception => e
                    # block
                else
                    # block
                ensure
                    
                end


    #   -------------begin_--------------- 
    #  begin                               
    #      `wrapped^                       
    #  ``rescue...`                        
    #  {{^rescue `Exception^` => `e^       
    #      `block^                         
    #  ``rescue...`                        
    #  ^`}}^``else...`                     
    #  {{^else                             
    #      `block^                         
    #  `}}^``ensure...`                    
    #  {{^ensure                           
    #      `cursor^                        
    #  `}}^end                             



begin
    WRAPPED_TEXT
    WRAPPED_TEXT_line2
rescue Exception => e
    # block
rescue Exception => e
    # block
rescue Exception => e
    # block
else
    # block
ensure
    
end

                begin
                    WRAPPED_TEXT
                    WRAPPED_TEXT_line2
                rescue_TYPED
                else_TYPEDensure
                                ...
                end b
